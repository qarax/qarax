/*
 * Firecracker API
 *
 * RESTful public-facing API. The API is accessible through HTTP calls on specific URLs carrying JSON modeled data. The transport medium is a Unix Domain Socket.
 *
 * The version of the OpenAPI document: 0.21.0
 * Contact: compute-capsule@amazon.com
 * Generated by: https://openapi-generator.tech
 */

/// MachineConfiguration : Describes the number of vCPUs, memory size, Hyperthreading capabilities and the CPU template.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MachineConfiguration {
    #[serde(rename = "cpu_template", skip_serializing_if = "Option::is_none")]
    pub cpu_template: Option<crate::models::CpuTemplate>,
    /// Flag for enabling/disabling Hyperthreading
    #[serde(rename = "ht_enabled")]
    pub ht_enabled: bool,
    /// Memory size of VM
    #[serde(rename = "mem_size_mib")]
    pub mem_size_mib: i32,
    /// Enable dirty page tracking. If this is enabled, then incremental guest memory snapshots can be created. These belong to diff snapshots, which contain, besides the microVM state, only the memory dirtied since a previous snapshot. Full snapshots each contain a full copy of the guest memory.
    #[serde(rename = "track_dirty_pages", skip_serializing_if = "Option::is_none")]
    pub track_dirty_pages: Option<bool>,
    /// Number of vCPUs (either 1 or an even number)
    #[serde(rename = "vcpu_count")]
    pub vcpu_count: i32,
}

impl MachineConfiguration {
    /// Describes the number of vCPUs, memory size, Hyperthreading capabilities and the CPU template.
    pub fn new(ht_enabled: bool, mem_size_mib: i32, vcpu_count: i32) -> MachineConfiguration {
        MachineConfiguration {
            cpu_template: None,
            ht_enabled,
            mem_size_mib,
            track_dirty_pages: None,
            vcpu_count,
        }
    }
}


