/*
 * Firecracker API
 *
 * RESTful public-facing API. The API is accessible through HTTP calls on specific URLs carrying JSON modeled data. The transport medium is a Unix Domain Socket.
 *
 * The version of the OpenAPI document: 0.21.0
 * Contact: compute-capsule@amazon.com
 * Generated by: https://openapi-generator.tech
 */

/// RateLimiter : Defines an IO rate limiter with independent bytes/s and ops/s limits. Limits are defined by configuring each of the _bandwidth_ and _ops_ token buckets.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct RateLimiter {
    #[serde(rename = "bandwidth", skip_serializing_if = "Option::is_none")]
    pub bandwidth: Option<crate::models::TokenBucket>,
    #[serde(rename = "ops", skip_serializing_if = "Option::is_none")]
    pub ops: Option<crate::models::TokenBucket>,
}

impl RateLimiter {
    /// Defines an IO rate limiter with independent bytes/s and ops/s limits. Limits are defined by configuring each of the _bandwidth_ and _ops_ token buckets.
    pub fn new() -> RateLimiter {
        RateLimiter {
            bandwidth: None,
            ops: None,
        }
    }
}


